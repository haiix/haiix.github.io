import*as A from"https://cdn.jsdelivr.net/npm/acorn@8.15.0/+esm";import*as c from"https://cdn.jsdelivr.net/npm/typescript@5.9.2/+esm";import{c as g,e as L}from"./index-D8sOyDaO.js";import{SourceMapConsumer as x}from"https://cdn.jsdelivr.net/npm/source-map-js@1.2.1/+esm";function E(l){const e=[];let s=0;for(const r of l)e.push({offset:s,length:r.length}),s+=r.length+1;return e}class w{lineMeta;totalLines;constructor(e){const s=e.split(`
`);this.lineMeta=E(s),this.totalLines=s.length}binarySearch(e){let s=0,r=this.totalLines-1;for(;s<=r;){const n=Math.floor((s+r)/2),{offset:t,length:o}=this.lineMeta[n];if(t<=e&&e<t+o)return{line:n+1,column:e-t};e<t?r=n-1:s=n+1}const i=this.lineMeta[this.totalLines-1];return{line:this.totalLines,column:i.length}}toLineColumn(e){const s=this.lineMeta[this.totalLines-1],r=g(e,0,s.offset+s.length);return this.binarySearch(r)}toIndex({line:e,column:s}){const r=g(e-1,0,this.totalLines-1),{offset:i,length:n}=this.lineMeta[r],t=g(s,0,n);return i+t}}const f=0,y=1,d=2;class m{declarations=new Set;identifiers=new Map;addDec(e){this.declarations.add(e)}addId(e,s){const r=this.identifiers.get(e)??[];this.identifiers.set(e,[...r,...s])}negate(){for(const e of this.declarations)this.identifiers.delete(e);return this.identifiers}merge(e){for(const[s,r]of e.negate())this.addId(s,r)}}function a(l,e,s,r){if(typeof l!="object"||l==null)return;if(Array.isArray(l)){for(const t of l)a(t,e,s,r);return}const i=l,{type:n}=i;if(n==="Identifier"){const t=i.name;r===y?e.addDec(t):r===d?s.addDec(t):s.addId(t,[i])}else if(n==="VariableDeclaration"){const t=i.kind==="var"?y:d;a(i.declarations,e,s,t)}else if(n==="VariableDeclarator")a(i.id,e,s,r),a(i.init,e,s,f);else if(n==="ArrayPattern")a(i.elements,e,s,r);else if(n==="ObjectPattern")a(i.properties,e,s,r);else if(n==="FunctionDeclaration"||n==="FunctionExpression"||n==="ArrowFunctionExpression"){const t=new m;n!=="ArrowFunctionExpression"&&(t.addDec("arguments"),n==="FunctionDeclaration"?a(i.id,e,s,d):a(i.id,t,t,d)),a(i.params,t,t,d),a(i.body,t,t,f),s.merge(t)}else if(n==="Program"||n==="BlockStatement"||n==="ForStatement"||n==="ForInStatement"||n==="ForOfStatement"){const t=new m;for(const o of Object.values(i))a(o,e,t,r);s.merge(t)}else if(n==="SwitchStatement"){a(i.discriminant,e,s,f);const t=new m;a(i.cases,e,t,f),s.merge(t)}else if(n==="CatchClause"){const t=new m;a(i.param,e,t,d),a(i.body,e,t,f),s.merge(t)}else if(n==="AssignmentExpression"||n==="BinaryExpression"||n==="AssignmentPattern")a(i.left,e,s,r),a(i.right,e,s,f);else if(n==="MemberExpression")a(i.object,e,s,f);else if(n==="Property"||n==="MetaProperty"||n==="MethodDefinition"||n==="PropertyDefinition"){const t=i.value?.type;(i.computed||!(r===f||t==="ObjectPattern"||t==="ArrayPattern"))&&a(i.key,e,s,r),a(i.value,e,s,r)}else if(n==="ClassDeclaration"||n==="ClassExpression"){const t=new m;n==="ClassDeclaration"?a(i.id,e,s,d):a(i.id,t,t,d),a(i.superClass,e,s,f),a(i.body,t,t,f),s.merge(t)}else if(n==="ImportSpecifier"||n==="ImportNamespaceSpecifier"||n==="ImportDefaultSpecifier")a(i.local,e,s,d);else if(n==="ExportSpecifier")a(i.local,e,s,f);else for(const t of Object.keys(i))t!=="label"&&a(i[t],e,s,r)}function O(l){const e=new m;return a(l,e,e,f),e.negate()}const D={module:c.ModuleKind.ESNext,target:c.ScriptTarget.ESNext,jsx:c.JsxEmit.React,strict:!0,inlineSourceMap:!0,experimentalDecorators:!0},I={ecmaVersion:"latest",sourceType:"module"},M=new Set(Object.getOwnPropertyNames(window));function P(l){const e=JSON.parse(atob(l.slice(l.lastIndexOf(",")+1)));return new x(e)}function N(l,e,s){const r=P(l),i=new w(l),n=new w(e),t=o=>n.toIndex(r.originalPositionFor(i.toLineColumn(o)));return[...s.values()].flat().map(o=>({start:t(o.start),end:t(o.end)})).sort((o,h)=>h.start-o.start)}function C(l,e){const s="\0_open_highlight_tag_\0",r="\0_close_highlight_tag_\0",i=(t,o,h)=>`${t.slice(0,o)}${s}${t.slice(o,h)}${r}${t.slice(h)}`;let n=e.reduce((t,o)=>i(t,o.start,o.end),l);return n=L(n).replaceAll(s,'<span class="highlight">').replaceAll(r,"</span>"),n}function _(l){const e=c.transpile(l,D),s=A.parse(e,I),r=O(s),i=[[],[]];for(const[u,p]of r){const T=M.has(u)?0:1;i[T].push(`${u}${p.length>1?`<span class="times"> x${p.length}</span>`:""}`)}const[n,t]=i,o=N(e,l,r),h=C(l,o);return[n.join(", "),t.join(", "),h]}export{_ as default,_ as parse};
