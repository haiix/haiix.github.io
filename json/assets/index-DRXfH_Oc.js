var g={d:(r,e)=>{for(var t in e)g.o(e,t)&&!g.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:e[t]})},o:(r,e)=>Object.prototype.hasOwnProperty.call(r,e)},l={};g.d(l,{mT:()=>x,sV:()=>z,zj:()=>A,JU:()=>y,n:()=>ee,F5:()=>P,Ay:()=>te,h0:()=>K,Tn:()=>k,Gv:()=>C,fX:()=>$,zp:()=>U,Zq:()=>F,QC:()=>M,st:()=>q,rE:()=>Y,ek:()=>J});const Y="1.1.2";function C(r){return typeof r=="object"&&r!==null}function k(r){return typeof r=="function"}function y(){return Object.create(null)}function q(r){return r.filter(e=>e!=null)}function j(...r){return new Function(...r)}function _(r,e,t,n){let s=t;const o=e.exec(r);if(!o)throw new Error(`Unexpected end of source at position ${e.lastIndex}`);const[,i,a,p,O,G,S]=o;if(i!=null)s.c.push(i);else if(a!=null)s=function(c,f,d,h){if(!f||typeof f=="string")throw new Error(`No opening tag for closing tag </${d}> at position ${h}`);if(c.t!==d)throw new Error(`Tag mismatch: opened <${c.t}> but closed </${d}> at position ${h}`);return f}(s,n.pop(),a,e.lastIndex);else if(p!=null&&O!=null){const c=function(f,d){const h={t:f,a:{},c:[]},Q=/\s+([^\s=>]+)(?:="([^"]*)"|='([^']*)'|(=))?/suy;let T;for(;T=Q.exec(d);){const[,w,V,X,Z]=T;if(Z)throw new Error(`Invalid attribute value at position ${T.index+1}`);w&&(h.a[w]=V??X??w)}return h}(p,O);s.c.push(c),G===""&&(n.push(s),s=c)}else if(S!=null){const c=S.trim();c&&s.c.push(c)}return s}function M(r){const e={t:"root",a:{},c:[]};(function(n,s){const o=/<!--.*?-->|<!\[CDATA\[(.*?)\]\]>|<\/([^>\s]+)\s*>|<([^>\s]+)([^>/]*)(\/?)>|([^<]+)/suy;let i=s;const a=[];for(;o.lastIndex<n.length;)i=_(n,o,i,a);if(a.length)throw new Error(`Unexpected end of source: unclosed tag <${i.t}>`)})(r,e);const t=e.c.shift();if(!t||e.c.length)throw new Error("Create only one root element in your template");return t}function I(r,e){if(!(e&&"onerror"in e&&k(e.onerror)))throw r;e.onerror(r)}function J(r,e){return(...t)=>{try{const n=r.apply(e,t);return C(n)&&"catch"in n&&k(n.catch)?n.catch(s=>{I(s,e)}):n}catch(n){I(n,e)}return null}}const N=y();function P(r,e){let t=N[r];if(!t){try{t=j("event",`return (${r});`)}catch{t=j("event",r)}N[r]=t}return J(t,e)}function F(r,e){if(e.class){let t=(r.getAttribute("class")??"").trim();const n=e.class.trim();t&&n&&(t+=" "),r.setAttribute("class",t+n)}if(e.style){let t=(r.getAttribute("style")??"").trim();const n=e.style.trim();t&&n&&!t.endsWith(";")&&(t+="; "),r.setAttribute("style",t+n)}}function U(r,e,t){for(const[n,s]of Object.entries(e))if((t==null||n!=="id")&&n!=="for"&&n!=="class"&&n!=="style")if(t&&n.startsWith("on")){const o=P(s,t);r[n]=o}else r.setAttribute(n,s)}function $(r,e,t){U(r,e,t),F(r,e)}const E=new WeakMap;function B(r,e,t){if(!t)return;const n=["id","for"];for(const s of n){const o=r[s];if(o!=null){let i=E.get(t);i||(i={id:y(),for:y()},E.set(t,i)),i[s][o]=e}}}function K(r,e){const t=E.get(r);return t&&t.id[e]}function W(r,e,t){if(typeof r=="string")return document.createTextNode(r);const n=q(r.c.map(i=>W(i,e,t))),s=t?.[r.t];if(s){const i={...r.a};"id"in i&&delete i.id;const a=new s(i,n,e);return B(r.a,a,e),"element"in a&&a.element instanceof Node?a.element:null}const o=document.createElement(r.t);$(o,r.a,e);for(const i of n)o.appendChild(i);return B(r.a,o,e),o}function A(r,e,t){const n=W(r,e,t);if(!(n instanceof HTMLElement))throw new Error("The root node must be an HTMLElement.");return n}function ee(r,e,t){return A(M(r),e,t)}let D=0;function z(r,e){let{id:t}=e;t||(D+=1,t=`t-component-global-id-${D}`,e.id=t),r.htmlFor=t}const L=new WeakMap;class x{static uses;static template="<div></div>";static parsedTemplate;element;parentComponent=null;static from(e){if(!C(e))return null;const t=L.get(e);return t instanceof this?t:null}constructor(e,t,n){const s=this.constructor;if(Object.hasOwn(s,"parsedTemplate")&&s.parsedTemplate||(s.parsedTemplate=M(s.template)),this.element=A(s.parsedTemplate,this,s.uses),e&&$(this.element,e,n),t)for(const i of t)this.element.appendChild(i);n instanceof x&&(this.parentComponent=n);const o=E.get(this);if(o)for(const i of Object.keys(o.for)){const a=o.for[i],p=o.id[i];a instanceof HTMLLabelElement&&p instanceof HTMLElement&&z(a,p)}L.get(this.element)||L.set(this.element,this)}id(e,t){const n=K(this,e);if(t&&!(n instanceof t))throw new Error(`Element with id "${e}" is not an instance of ${t.name}`);return n}onerror(e){if(!this.parentComponent)throw e;this.parentComponent.onerror(e)}}const te=x;var m=l.mT;l.sV;l.zj;l.JU;l.n;l.F5;l.Ay;l.h0;l.Tn;l.Gv;l.fX;var ne=l.zp,se=l.Zq;l.QC;l.st;l.rE;l.ek;class re extends m{static template='<ul id="ul"></ul>';ul=this.id("ul",HTMLUListElement);constructor(e,t,n){super(e,[],n),t&&this.append(...t)}append(...e){this.ul.append(...e.map(t=>{let n=t;if(n instanceof m&&(n.parentComponent=this,n=n.element),n instanceof HTMLLIElement)return n;const s=document.createElement("li");return s.append(n),s}))}insertBefore(e,t){let n=e,s=t;n instanceof m&&(n.parentComponent=this,n=n.element),s instanceof m&&(s=s.element),this.element.insertBefore(n,s)}remove(){this.parentComponent=null,this.element.remove()}get children(){const e=[];for(const t of this.ul.children)if(t instanceof HTMLLIElement){const n=m.from(t);e.push(n??t)}return e}static fromEventTarget(e){if(!(e instanceof HTMLElement))return null;for(let t=e;t;t=t.parentElement){const n=this.from(t);if(n)return n}return null}}class R extends re{get children(){const e=[];for(const t of this.ul.children){const n=H.from(t);n&&e.push(n)}return e}}class H extends R{static template=`
    <li>
      <details id="details" onclick="event.preventDefault()">
        <summary tabindex="-1">
          <a onmousedown="this.handleControl(event)"></a>
          <div id="summaryContent"></div>
        </summary>
        <ul id="ul">
        </ul>
      </details>
    </li>
  `;details=this.id("details",HTMLDetailsElement);summaryContent=this.id("summaryContent",HTMLElement);constructor(e,t,n){const s=t?.[0]??"";super({},t?.slice(1),n),s&&this.summaryContent.append(s),e&&("isExpandable"in e&&(e["data-isexpandable"]=e.isExpandable,delete e.isExpandable),se(this.element,e),ne(this.details,e,n))}get isExpandable(){return this.details.dataset.isexpandable!=="false"}set isExpandable(e){this.details.dataset.isexpandable=e?"":"false"}get isExpaned(){return this.details.open}set isExpaned(e){this.details.open=e}get summary(){return this.summaryContent}set summary(e){this.summaryContent=e}handleControl(e){e.button===0&&(this.isExpaned=!this.isExpaned)}}class b extends R{static template=`
    <div class="t-tree"
      tabindex="0"
      onmousedown="this.handleMouseDown(event)"
      onclick="this.handleClick(event)"
      onkeydown="this.handleKeyDown(event)"
    >
      <ul id="ul"></ul>
    </div>
  `;selected=null;handleMouseDown(e){e.preventDefault(),this.element.focus()}handleClick(e){const t=e.target,n=H.fromEventTarget(t);e.button!==0||!n||t instanceof HTMLAnchorElement&&n.isExpandable||(this.selected?.classList.remove("selected"),this.selected=n.summary.parentElement,this.selected?.classList.add("selected"))}handleKeyDown(e){e.preventDefault();const t=this.selected,n=t?.parentElement;if(!(t instanceof HTMLElement)||!(n instanceof HTMLDetailsElement))return;const s=b.getNextLiFromKey(n,e.key);if(s instanceof HTMLLIElement){const o=s.querySelector(":scope > details > summary");o instanceof HTMLElement&&(this.selected=o,t.classList.remove("selected"),o.classList.add("selected"))}}static getNextLiFromKey(e,t){const n=e.parentElement?.parentElement?.parentElement?.parentElement;let s,o;switch(t){case"ArrowUp":for(s=n,o=e.parentElement?.previousElementSibling;o instanceof HTMLLIElement;)s=o,o=s.querySelector(":scope > details[open] > ul > li:last-of-type");break;case"ArrowDown":for(s=e.querySelector(":scope[open] > ul > li:first-of-type"),o=e.parentElement;!s&&o instanceof HTMLLIElement;)s=o.nextElementSibling,o=o.parentElement?.parentElement?.parentElement;break;case"ArrowLeft":e.open||(s=n),e.open=!1;break;case"ArrowRight":s=e.querySelector(":scope[open] > ul > li:first-of-type"),e.open=!0;break;case"Backspace":s=n;break}return s??null}}class u extends H{value}class oe extends m{static uses={tree:b,item:u};static template=`
    <div>
      <tree id="tree" ondblclick="this.handleTreeDblClick(event)" onblur="this.handleBlur()">
        <item id="root" open></item>
      </tree>
      <form id="srcPopupContainer" class="src-popup-container">
        <textarea id="sourceText" spellcheck="false" placeholder="Write JSON here"></textarea>
        <div class="buttons">
          <button type="submit" onclick="this.handleOkButton(event)">OK</button>
          <button type="button" onclick="this.handleCancelButton(event)">Cancel</button>
        </div>
      </form>
    </div>
  `;tree=this.id("tree",b);root=this.id("root",u);current=this.root;srcPopupContainer=this.id("srcPopupContainer",HTMLElement);sourceText=this.id("sourceText",HTMLTextAreaElement);handleOkButton(e){e.preventDefault();const t=JSON.parse(this.sourceText.value||"{}"),n=this.current;for(const i of n.children)i.remove();const s=n.element.dataset.key??"Root";this.recur(n,n.element.dataset.key??"Root",t),n.value=t;const o=n.parentComponent;o instanceof u&&(o.value[s]=t),this.srcPopupContainer.classList.add("hidden")}valueStr(e){return typeof e=="object"&&e!==null?Array.isArray(e)?"[...]":"{...}":JSON.stringify(e)}recur(e,t,n){if(e.element.dataset.key=t,typeof n=="object"&&n!==null){if(Array.isArray(n)){e.summary.innerHTML=`${t}: <span>[${n.slice(0,3).map(s=>this.valueStr(s)).join(", ")}${n.length>3?", ...":""}]</span>`;for(const[s,o]of n.entries()){const i=new u;i.value=o,e.append(i),this.recur(i,s.toFixed(),o)}e.element.dataset.type="array"}else{const s=Object.entries(n);e.summary.innerHTML=`${t}: <span>{ ${s.slice(0,3).map(([o,i])=>`"${o}": ${this.valueStr(i)}`).join(", ")}${s.length>3?", ...":""} }</span>`;for(const[o,i]of s){const a=new u;a.value=i,e.append(a),this.recur(a,o,i)}e.element.dataset.type="object"}e.isExpandable=!0}else{let s=typeof n;s==="object"&&(s="null"),e.element.dataset.type=s,e.summary.textContent=`${t}: ${this.valueStr(n)}`,e.isExpandable=!1}}handleCancelButton(){this.srcPopupContainer.classList.add("hidden")}handleTreeDblClick(e){if(e.target instanceof HTMLAnchorElement)return;const t=u.fromEventTarget(e.target);t&&(this.current=t,this.sourceText.value=JSON.stringify(t.value,null,2),this.srcPopupContainer.classList.remove("hidden"))}handleBlur(){this.tree.element.querySelector(".selected")?.classList.remove("selected")}onerror(e){throw alert(e),e}}const v=new oe;document.body.append(v.element);v.root.value={a:"str",b:1,c:!0,d:[2,3],e:null};v.sourceText.value=JSON.stringify(v.root.value);
